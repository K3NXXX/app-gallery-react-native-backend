generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id         Int         @id @default(autoincrement())
  name       String
  email      String      @unique
  avatar     String
  password   String
  createdAt  DateTime    @default(now())
  updatedAt  DateTime    @updatedAt
  photos     Photo[]
  favourites Favourite[]
  albums     Album[]

  @@map("users")
}

model Photo {
  id         Int          @id @default(autoincrement())
  userId     Int
  name       String
  url        String
  createdAt  DateTime     @default(now())
  updatedAt  DateTime     @updatedAt
  user       User         @relation(fields: [userId], references: [id])
  favourites Favourite[]
  albums     AlbumPhoto[]

  @@map("photos")
}

model Favourite {
  id        Int      @id @default(autoincrement())
  userId    Int
  photoId   Int
  createdAt DateTime @default(now())
  user      User     @relation(fields: [userId], references: [id])
  photo     Photo    @relation(fields: [photoId], references: [id])

  @@unique([userId, photoId])
  @@map("favourites")
}

model Album {
  id          Int          @id @default(autoincrement())
  name        String
  description String
  imageUrl    String
  createdAt   DateTime     @default(now())
  userId      Int
  user        User         @relation(fields: [userId], references: [id])
  photos      AlbumPhoto[]

  @@map("albums")
}

model AlbumPhoto {
  albumId Int
  photoId Int  
  isCover Boolean @default(false)
  album   Album   @relation(fields: [albumId], references: [id])
  photo   Photo   @relation(fields: [photoId], references: [id])

  @@id([albumId, photoId])
  @@map("album_photos")
}
